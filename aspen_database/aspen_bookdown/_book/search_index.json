[["index.html", "Creating a Database for Aspen Seedlings Chapter 1 Building the aspen seedling database 1.1 Database structure 1.2 Creating the database", " Creating a Database for Aspen Seedlings Sarah Kapel 2023-03-19 Chapter 1 Building the aspen seedling database 1.1 Database structure I will be constructing a database to organize my data. I have roughly 1,000 seedlings planted in four sites under three treatments across the Southwest. For this project, I will follow this database structure Fig. 1: Diagram of database structure 1.2 Creating the database This is the code we used to create the database. Well start with loading the DBI and RSQLite packages: library(DBI) library(RSQLite) library(dplyr) library(ggplot2) First, were going to start by establishing a connection to a SQLite database. aspen_db &lt;- dbConnect(RSQLite::SQLite()) 1.2.1 Creating the measurments table This table includes all information about individuals that are part of our dataset. The table includes columns for tag id, measurment id, date, height of seedlings, root collar diameter of seedlings, site information, recorder information, survivorship status, and herbivory status. The primary key is the measurement id. dbExecute(aspen_db, &quot;CREATE TABLE measurements ( tag_id varchar(4) NOT NULL, measurement_id varchar (5) NOT NULL, date varchar (10), height varchar (4), rcd varchar (4), site_name varchar, structure_id varchar (2), structure_type varchar (1), recorder varchar (10), status varchar (5), herbivory varchar (1), PRIMARY KEY (measurement_id) );&quot;) measurements &lt;- read.csv(&quot;measurements.csv&quot;,stringsAsFactors = FALSE) dbWriteTable(aspen_db, &quot;measuremements&quot;, measurements, append = TRUE) 1.2.2 Creating the other tables Since creating the first table, I quickly replicated this process for the remaining tables. # Create planting_data table dbExecute(aspen_db, &quot;CREATE TABLE planting_data ( tag_id varchar(4) NOT NULL, photo_no varchar (6), planter varchar (3), recorder varchar (10), azimuth varchar (5), dist varchar (5), log_ht varchar (5), comp_sp varchar (5), comp_dist varchar (5), comp_ht varchar (5), grass varchar (4), forb varchar (4), rock varchar (4), shrub varchar (4), cwd varchar (4), litter varchar (4), bare_soil varchar (4), moss varchar (4), snag varchar (4), other varchar (4), total varchar (3), PRIMARY KEY (tag_id) );&quot;) planting_data &lt;- read.csv(&quot;planting_data.csv&quot;,stringsAsFactors = FALSE) dbWriteTable(aspen_db, &quot;plantind_data&quot;, planting_data, append = TRUE) ## Create sites table dbExecute(aspen_db, &quot;CREATE TABLE sites ( fire varchar (9), site_id varchar (1), elevation varchar (5), forest varchar (16), PRIMARY KEY (fire) );&quot;) sites &lt;- read.csv(&quot;sites.csv&quot;,stringsAsFactors = FALSE) dbWriteTable(aspen_db, &quot;sites&quot;, sites, append = TRUE) ## Create soil_moisture table dbExecute(aspen_db, &quot;CREATE TABLE soil_moisture ( logger_id varchar (10), structure_id varchar (3), date varchar (10), PRIMARY KEY (logger_id) );&quot;) soil_moisture &lt;- read.csv(&quot;soil_moisture.csv&quot;, stringsAsFactors = FALSE) dbWriteTable(aspen_db, &quot;soil_moisture&quot;, soil_moisture, append = TRUE) ## Create structures table dbExecute(aspen_db, &quot;CREATE TABLE structures ( site_name varchar, site_no varchar (1), structure_no varchar (2), structure_type varchar (1), structure_sp varchar (5), dbh varchar (4), decay_class varchar (1), vexar varchar (1), photo_no varchar (6), utm_x varchar (15), utm_y varchar (15), PRIMARY KEY (structure_no) );&quot;) structures &lt;- read.csv(&quot;structures.csv&quot;, stringsAsFactors = FALSE) dbWriteTable(aspen_db, &quot;structures&quot;, structures, append = TRUE) "],["database-is-complete.html", "Chapter 2 Database is complete", " Chapter 2 Database is complete This is the final result of creating our aspen database. bookdown::serve_book() "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
